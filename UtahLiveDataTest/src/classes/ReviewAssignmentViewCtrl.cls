/**
* View page controller for the ReviewAssignment__c object
* 
* CHANGE HISTORY
* =============================================================================
* Date          Name            Description
* 05/16/2014    Ryan Chadwick   Created
* 11/14/2014    Nakul           Updated as per new changes 
* =============================================================================
*/

public with sharing class ReviewAssignmentViewCtrl {

    //Properties
    public ID recordId{get;set;}
    public ID taskId{get;set;}
    public String pageTemplateName {get;set;}
    private Review__c review;
    private PanelApplication__c reviewStepApplicationObj;    
    public PageReference deleteURL {get;set;}
    //public Boolean isError{get;set;}
    public Boolean isEligibleToViewReview{get;set;}
    
    public ReviewAssignmentViewCtrl(ApexPages.StandardController stdController){
        //isError = false;
        try{
        
        recordId = ApexPages.CurrentPage().getParameters().get('id');
        taskId = ApexPages.CurrentPage().getParameters().get('taskId');
        system.debug('taskid is ' +taskId);        
        deleteURL = null;
           
        if(recordId != null){
            review = [SELECT Id, ReviewPanel__r.ReviewStep__r.ReviewFormConfig__r.Name,ReviewStep__r.OrganizationName__c, ReviewPanel__c,ReviewPanel__r.ReviewPackage__c,ReviewStep__r.ReviewGroup__r.Announcement__c,
                ReviewPanel__r.ReviewPackage__r.GNT__PageTemplateConfig__c, PanelApplication__c, Status__c, AcceptanceStatus__c,Application__c,Application__r.OwnerId, 
                PreApplication__c,PreApplication__r.OwnerId, ReviewStep__r.ReviewGroup__r.Announcement__r.Program__r.ReviewProcess__c FROM Review__c WHERE id=:recordId];    
            pageTemplateName = review.ReviewPanel__r.ReviewStep__r.ReviewFormConfig__r.Name;
            system.debug('pageTemplate name' +pageTemplateName);                 
            
            if(review.Status__c == 'Declined Due To Conflict' || review.Status__c == 'Declined Without Conflict'){
                pageTemplateName = 'ReviewFormDeclined';
            }
            if (review.ReviewStep__r.ReviewGroup__r.Announcement__r.Program__r.ReviewProcess__c == 'One step review') {//If one step review, set the page layout as OneStepReviewForm
                pageTemplateName = 'OneStepReviewForm';
            }
            
            
                
           //*****
           //isEligibleToViewReview = false;
            String currentUserId = UserInfo.getUserId();  
            String annId = review.ReviewStep__r.ReviewGroup__r.Announcement__c;     
            //String annId = 'a1S350000005hM9EAI';
            //String currentUserId = '00535000000h3BnAAI';
            List<RolesAndResponsibilities__c> ReviewUsrInAnnRoles  = [SELECT Name__c FROM RolesAndResponsibilities__c where Announcement__c =:annId AND Name__c =:currentUserId];
            System.debug('DeviTest ReviewUsrInAnnRoles  size*****' + ReviewUsrInAnnRoles.size());
            if((ReviewUsrInAnnRoles.size() <= 0 || ReviewUsrInAnnRoles == null) && review.ReviewStep__r.OrganizationName__c == 'USBE'){
                review.addError('You do not have sufficient privilege to view this page.');
                pageTemplateName='OneStepReviewFormForErr';
            }
      
            /*
            if(ReviewUsrInAnnRoles  != null && ReviewUsrInAnnRoles.size() > 0){
                isEligibleToViewReview  = true;
            }else {
                review.addError('You do not have sufficient privilege to view this page.');
                pageTemplateName='OneStepReviewFormForErr';
            }
            */
            
            System.debug('DeviTest pagetempname *****' + pageTemplateName);
            System.debug('DeviTest CurrUsrId: *****' + currentUserId);
            System.debug('DeviTest annId: *****' + annId);
            //System.debug('DeviTest isEligibleToViewReview *****' + isEligibleToViewReview);
            if(ReviewUsrInAnnRoles  != null){
             for(RolesAndResponsibilities__c temp: ReviewUsrInAnnRoles){
                System.debug('DeviTest temp *****' + temp);
             }
            }
           
            //***** 
            
            
         }
         }catch(Exception e){
            //isError = true;
         }        
    }
    public void calculate(Integer i){
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
}
public void calculate1(Integer i){
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
i=1;
}    
    public string getKeyValueMap(){
        Map<String,String> keyValueMap = new Map<String,String>();
        try{
        keyValueMap.put('parentid',ApexPages.currentPage().getParameters().get('id'));
        keyValueMap.put('taskId', taskId);
        if(review.PreApplication__c != null){
            keyValueMap.put('parentOwnerId',review.PreApplication__r.OwnerId);
        }else
        {
            keyValueMap.put('parentOwnerId',review.Application__r.OwnerId);
        }
        }catch(Exception e){}
        return JSON.serialize(keyValueMap);
    }

     public PageReference redirect(){
        String nextAction=  ApexPages.CurrentPage().getParameters().get('nextAction');
         List<Review__c> reviewObjList =  [Select Id, Name, Recommendation__c,ReviewDeclineReason__c,Status__c,ReviewAcceptanceStatus__c  from Review__c where id =:recordId Limit 1];
         Review__c review = reviewObjList[0];
         if(review.ReviewAcceptanceStatus__c =='Accepted'){              
            PageReference reviewEditPage = new PageReference('/apex/ReviewAssignmentView');
            reviewEditPage.getParameters().put('Id',ApexPages.currentPage().getParameters().get('id'));
            reviewEditPage.getParameters().put('taskId',ApexPages.currentPage().getParameters().get('taskId'));
            reviewEditPage.setRedirect(true);
            return reviewEditPage ;
            }
            else if (review.ReviewAcceptanceStatus__c =='Declined'){
                  //update Review Record
            Id recordId=ApexPages.currentPage().getParameters().get('id');
            if(review.ReviewDeclineReason__c==null || review.ReviewDeclineReason__c=='None'|| review.ReviewDeclineReason__c==''){
                ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR, 'Please select a Review Decline Reason'));
               //ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR, GNT.ErrorMessageHelper.fetchMessage('GEN-GRNTR-69138'))); 
               return null;
            }
            PageReference newPage = new PageReference('/apex/PhaseView?t=Application');
            newPage.setRedirect(true);
            return newPage ; 
              }   
            else {
             PageReference reviewEditPage = new PageReference('/apex/ReviewerConfirmationView');
            reviewEditPage.getParameters().put('Id',ApexPages.currentPage().getParameters().get('id'));
            reviewEditPage.setRedirect(true);
            return reviewEditPage ;
              } 
     return null ;
    } 
}