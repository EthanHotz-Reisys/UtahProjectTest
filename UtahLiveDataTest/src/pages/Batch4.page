<apex:page cache="false" controller="BatchController" standardStylesheets="false" sidebar="false" showHeader="false">
    <style>
        body {font-family: "Lato", sans-serif;}

        /* Style the tab */
        div.tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #b1c1d1;
            border-radius: 8px;
            width:100%;
        }

        /* Style the buttons inside the tab */
        div.tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 8px 16px;
            transition: 0.3s;
            max-width: 400px;
            min-width: 10.5%;
            font-weight: bold;
            color: #002444;
            font-size: 12px;
        }

        /* Change background color of buttons on hover */
        div.tab button:hover {
            background-color: #d0ddea;
        }

        /* Create an active/current tablink class */
        div.tab button.active {
            background-color: #d0ddea;
        }
        .w3-myfont {
            font-family: Arial, Helvetica, sans-serif;
        }
        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 6px 12px;
            border: 1px solid #ccc;
            border-top: none;
        }
    </style>
    <c:ExternalLibrary />
    <script type="text/javascript" src="//unpkg.com/xlsx/dist/shim.min.js"></script>
    <script type="text/javascript" src="//unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
        <apex:composition template="GNT__PhaseTemplate">
        <apex:define name="body">
    <apex:outputPanel rendered="{!currentAccount = 'USBE' || currentAccount = 'SYSTEM'}">
        <div class="tab w3-myfont">
          
          <button class="tablinks" onclick="openTab(event, 'MSP')" id="tabMSP">MSP</button>
          <button class="tablinks" onclick="openTab(event, 'FF')" id="tabFF">Fed-Formula</button>
          <button class="tablinks" onclick="openTab(event, 'SF')" id="tabSF">State-Formula</button>
          <button class="tablinks" onclick="openTab(event, 'APP12')" id="tabAPP12">Application 1-12th</button>
          <button class="tablinks" onclick="openTab(event, 'SC')" id="tabSC">State Competitive</button>
          <button class="tablinks" onclick="openTab(event, 'FC')" id="tabFC">Fed-Competitive</button>
          <button class="tablinks" onclick="openTab(event, 'LSA')" id="tabLSA">Lump-Sum-App</button>
          <button class="tablinks" onclick="openTab(event, 'LSNA')" id="tabLSNA">Lump-Sum-no-Application</button>
        </div>
    </apex:outputPanel>
    


            <apex:outputPanel rendered="{!currentAccount = 'USBE' || currentAccount = 'SYSTEM'}">

                <div id="MSP" class="tabcontent">
                    <button type="button" id="btnExport" style="float: right;" class="customBtn button1">Export</button>
                    <GNT:FlexTable flexTableName="ActiveGrants" tableId="ActiveGrants" flexTableParameters="{!keyValueMap_MSP}"/>
                </div>

               <div id="FF" class="tabcontent">
                    <GNT:FlexTable flexTableName="ActiveGrants" tableId="ActiveGrants" flexTableParameters="{!keyValueMap_FedFormula}"/>
                </div>

                <div id="SF" class="tabcontent">
                    <GNT:FlexTable flexTableName="ActiveGrants" tableId="ActiveGrants" flexTableParameters="{!keyValueMap_StateFormula}"/>
                  
                </div>

                <div id="APP12" class="tabcontent">
                    <GNT:FlexTable flexTableName="ActiveGrants" tableId="ActiveGrants" flexTableParameters="{!keyValueMap_MSP}" />
                </div>

                <div id="SC" class="tabcontent">
                    <GNT:FlexTable flexTableName="ActiveGrants" tableId="ActiveGrants" flexTableParameters="{!keyValueMap_MSP}" />
                </div>

                <div id="FC" class="tabcontent">
                    <GNT:FlexTable flexTableName="ActiveGrants" tableId="ActiveGrants" flexTableParameters="{!keyValueMap_MSP}" />
                </div>

                <div id="LSA" class="tabcontent">
                    <GNT:FlexTable flexTableName="ActiveGrants" tableId="ActiveGrants" flexTableParameters="{!keyValueMap_MSP}" />
                </div>

                <div id="LSNA" class="tabcontent">
                    <GNT:FlexTable flexTableName="ActiveGrants" tableId="ActiveGrants" flexTableParameters="{!keyValueMap_LSNA}" />
                </div>
            </apex:outputPanel>
            <apex:outputPanel rendered="{!currentAccount != 'USBE' && currentAccount != 'SYSTEM'}">
                <GNT:FlexTable flexTableName="GrantorPaymentRequest" tableId="Programs" flexTableParameters="{!keyValueMap}"/>
            </apex:outputPanel>
        </apex:define>
    </apex:composition>

    <script>
    function openTab(evt, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
        //document.cookie = "batchType=" + tabName;
        window.localStorage.setItem('batchType',  tabName);
    }
    /*
    function getCookie(cname) {
        var name = cname + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(';');
        for(var i = 0; i <ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }
    */
    function getBatchType(){
        return window.localStorage.getItem('batchType');
    }
    j$(document).ready(function(){
        //var tab = document.getElementById('tab' + getCookie("batchType")) || document.getElementById('tabPrograms');
        var tab = document.getElementById('tab' + getBatchType()) || document.getElementById('tabPrograms');
        tab.click();
    });
    /*j$("button[title|='Export']").click(function(event){
        alert('clicked');
        event.stopPropagation();
    });*/
    /*$( "button[title|='Export']" ).on( "click", function(event) {
       alert('clicked');
       if(event){
        event.stopPropagation();
       }
    });*/
    j$('#btnExport').click(function(){
        
       Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.BatchController.getData}',
                    'MSP',
                function(result, event) {
                    console.log(result);
                    if(result){
                        var ws = XLSX.utils.json_to_sheet(result);

                        /* add to workbook */
                        var wb = XLSX.utils.book_new();
                        XLSX.utils.book_append_sheet(wb, ws, "Data");

                        /* write workbook and force a download */
                        XLSX.writeFile(wb, "programs.xlsx"); 
                    }
                    if (event.status) {

                    } else if (event.type === 'exception') {

                    } else {

                    }
                }, {
                    escape: true
                }
            );
    })
    </script>
</apex:page>